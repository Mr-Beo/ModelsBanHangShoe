// <auto-generated />
using System;
using Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(DbContextApp))]
    [Migration("20250917085851_datn")]
    partial class datn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Models.GiayYeuThich", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GiayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KhachHangId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayYeuThich")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GiayId");

                    b.HasIndex("KhachHangId");

                    b.ToTable("giayYeuThiches");
                });

            modelBuilder.Entity("API.Models.ThongBao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("DaXem")
                        .HasColumnType("bit");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGian")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ThongBaos");
                });

            modelBuilder.Entity("Data.Models.Anh", b =>
                {
                    b.Property<Guid>("AnhId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DuongDan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GiayChiTietId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("AnhId");

                    b.HasIndex("GiayChiTietId");

                    b.ToTable("Anhs");
                });

            modelBuilder.Entity("Data.Models.ChatLieu", b =>
                {
                    b.Property<Guid>("ChatLieuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenChatLieu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("ChatLieuId");

                    b.ToTable("ChatLieus");
                });

            modelBuilder.Entity("Data.Models.ChucVu", b =>
                {
                    b.Property<Guid>("ChucVuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MotaChucVu")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TenChucVu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ChucVuId");

                    b.ToTable("ChucVus");

                    b.HasData(
                        new
                        {
                            ChucVuId = new Guid("11111111-1111-1111-1111-111111111111"),
                            MotaChucVu = "Quản trị hệ thống",
                            TenChucVu = "Admin",
                            TrangThai = 1
                        },
                        new
                        {
                            ChucVuId = new Guid("22222222-2222-2222-2222-222222222222"),
                            MotaChucVu = "Nhân viên bán hàng",
                            TenChucVu = "NhanVien",
                            TrangThai = 1
                        });
                });

            modelBuilder.Entity("Data.Models.DeGiay", b =>
                {
                    b.Property<Guid>("DeGiayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDeGiay")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("DeGiayId");

                    b.ToTable("DeGiays");
                });

            modelBuilder.Entity("Data.Models.DiaChiKhachHang", b =>
                {
                    b.Property<Guid>("DiaChiKhachHangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChiCuThe")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<Guid>("KhachHangId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhuongXa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("QuanHuyen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ThanhPho")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("DiaChiKhachHangId");

                    b.HasIndex("KhachHangId");

                    b.ToTable("diaChiKhachHangs");
                });

            modelBuilder.Entity("Data.Models.GiamGia", b =>
                {
                    b.Property<Guid>("GiamGiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<float>("PhanTramKhuyenMai")
                        .HasColumnType("real");

                    b.Property<string>("SanPhamKhuyenMai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenGiamGia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("GiamGiaId");

                    b.ToTable("GiamGias");
                });

            modelBuilder.Entity("Data.Models.Giay", b =>
                {
                    b.Property<Guid>("GiayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChatLieuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeGiayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("KieuDangId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenGiay")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("TheLoaiGiayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ThuongHieuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("GiayId");

                    b.HasIndex("ChatLieuId");

                    b.HasIndex("DeGiayId");

                    b.HasIndex("KieuDangId");

                    b.HasIndex("TheLoaiGiayId");

                    b.HasIndex("ThuongHieuId");

                    b.ToTable("Giays");
                });

            modelBuilder.Entity("Data.Models.GiayChiTiet", b =>
                {
                    b.Property<Guid>("GiayChiTietId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Gia")
                        .HasColumnType("real");

                    b.Property<Guid>("GiayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("KichCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MauSacId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuongCon")
                        .HasColumnType("int");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("GiayChiTietId");

                    b.HasIndex("GiayId");

                    b.HasIndex("KichCoId");

                    b.HasIndex("MauSacId");

                    b.ToTable("GiayChiTiets");
                });

            modelBuilder.Entity("Data.Models.GiayDotGiamGia", b =>
                {
                    b.Property<Guid>("GiayDotGiamGiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GiamGiaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GiayChiTietId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GiayId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GiayDotGiamGiaId");

                    b.HasIndex("GiamGiaId");

                    b.HasIndex("GiayChiTietId");

                    b.HasIndex("GiayId");

                    b.ToTable("GiayDotGiamGias");
                });

            modelBuilder.Entity("Data.Models.GioHang", b =>
                {
                    b.Property<Guid>("GioHangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KhachHangId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayCapNhatCuoiCung")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTaoGioHang")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("GioHangId");

                    b.HasIndex("KhachHangId");

                    b.ToTable("GioHangs");
                });

            modelBuilder.Entity("Data.Models.GioHangChiTiet", b =>
                {
                    b.Property<Guid>("GioHangChiTietId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("GiayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GioHangId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuongSanPham")
                        .HasColumnType("int");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("GioHangChiTietId");

                    b.HasIndex("GiayId");

                    b.HasIndex("GioHangId");

                    b.ToTable("GioHangChiTiets");
                });

            modelBuilder.Entity("Data.Models.HinhThucThanhToan", b =>
                {
                    b.Property<Guid>("HinhThucThanhToanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenHinhThuc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("HinhThucThanhToanId");

                    b.ToTable("hinhThucThanhToans");
                });

            modelBuilder.Entity("Data.Models.HoaDon", b =>
                {
                    b.Property<Guid>("HoaDonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("HinhThucThanhToanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("KhachHangId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayNhanHang")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("NhanVienId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("PhiShip")
                        .HasColumnType("real");

                    b.Property<float>("TongTienSauKhiGiam")
                        .HasColumnType("real");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VoucherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("HoaDonId");

                    b.HasIndex("HinhThucThanhToanId");

                    b.HasIndex("KhachHangId");

                    b.HasIndex("NhanVienId");

                    b.HasIndex("VoucherId");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("Data.Models.HoaDonChiTiet", b =>
                {
                    b.Property<Guid>("HoaDonChiTietId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("GiayChiTietId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GiayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HoaDonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayTraHang")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuongSanPham")
                        .HasColumnType("int");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<string>("TrangThaiChiTiet")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("HoaDonChiTietId");

                    b.HasIndex("GiayChiTietId");

                    b.HasIndex("GiayId");

                    b.HasIndex("HoaDonId");

                    b.ToTable("HoaDonChiTiets");
                });

            modelBuilder.Entity("Data.Models.KhachHang", b =>
                {
                    b.Property<Guid>("KhachHangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("NgayCapNhatCuoiCung")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TaiKhoanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("KhachHangId");

                    b.HasIndex("TaiKhoanId")
                        .IsUnique()
                        .HasFilter("[TaiKhoanId] IS NOT NULL");

                    b.ToTable("KhachHangs");
                });

            modelBuilder.Entity("Data.Models.KhachHangVoucher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("DaSuDung")
                        .HasColumnType("bit");

                    b.Property<Guid>("KhachHangId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VoucherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VoucherId");

                    b.HasIndex("KhachHangId", "VoucherId")
                        .IsUnique();

                    b.ToTable("KhachHangVouchers");
                });

            modelBuilder.Entity("Data.Models.KichCo", b =>
                {
                    b.Property<Guid>("KichCoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKichCo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<int>("size")
                        .HasColumnType("int");

                    b.HasKey("KichCoId");

                    b.ToTable("KichCos");

                    b.HasData(
                        new
                        {
                            KichCoId = new Guid("6a5fe1f8-e625-43e9-b568-407f3b4e4724"),
                            MoTa = "Cỡ giày 35",
                            TenKichCo = "Size 35",
                            TrangThai = true,
                            size = 35
                        },
                        new
                        {
                            KichCoId = new Guid("1cf6d2ac-b100-420b-812e-6292fc6e17ea"),
                            MoTa = "Cỡ giày 36",
                            TenKichCo = "Size 36",
                            TrangThai = true,
                            size = 36
                        },
                        new
                        {
                            KichCoId = new Guid("908937dd-7dfa-40ee-a74c-bcc546128402"),
                            MoTa = "Cỡ giày 37",
                            TenKichCo = "Size 37",
                            TrangThai = true,
                            size = 37
                        },
                        new
                        {
                            KichCoId = new Guid("d09776bb-3900-4090-a263-012e88422600"),
                            MoTa = "Cỡ giày 38",
                            TenKichCo = "Size 38",
                            TrangThai = true,
                            size = 38
                        },
                        new
                        {
                            KichCoId = new Guid("ec96f272-a481-410b-8af4-a27519b9b1b0"),
                            MoTa = "Cỡ giày 39",
                            TenKichCo = "Size 39",
                            TrangThai = true,
                            size = 39
                        },
                        new
                        {
                            KichCoId = new Guid("cb8c71c4-5e48-42e4-b31f-3b2d829773d4"),
                            MoTa = "Cỡ giày 40",
                            TenKichCo = "Size 40",
                            TrangThai = true,
                            size = 40
                        },
                        new
                        {
                            KichCoId = new Guid("54dabe6a-e128-40c4-bdc4-eed5caa2f7dc"),
                            MoTa = "Cỡ giày 41",
                            TenKichCo = "Size 41",
                            TrangThai = true,
                            size = 41
                        },
                        new
                        {
                            KichCoId = new Guid("4fd175d9-578d-4be7-a995-797e502dcf54"),
                            MoTa = "Cỡ giày 42",
                            TenKichCo = "Size 42",
                            TrangThai = true,
                            size = 42
                        },
                        new
                        {
                            KichCoId = new Guid("43d13f8f-235c-4e6b-84b9-603a2c4c2193"),
                            MoTa = "Cỡ giày 43",
                            TenKichCo = "Size 43",
                            TrangThai = true,
                            size = 43
                        },
                        new
                        {
                            KichCoId = new Guid("662138d1-3210-4e53-aeca-0c5300a55b8c"),
                            MoTa = "Cỡ giày 44",
                            TenKichCo = "Size 44",
                            TrangThai = true,
                            size = 44
                        },
                        new
                        {
                            KichCoId = new Guid("b7ac9917-da85-4533-bb2f-a6552112736e"),
                            MoTa = "Cỡ giày 45",
                            TenKichCo = "Size 45",
                            TrangThai = true,
                            size = 45
                        },
                        new
                        {
                            KichCoId = new Guid("2e61a0c5-af97-4215-b615-195d3dfdda33"),
                            MoTa = "Cỡ giày 46",
                            TenKichCo = "Size 46",
                            TrangThai = true,
                            size = 46
                        },
                        new
                        {
                            KichCoId = new Guid("cb17c13a-4034-427b-b0c0-bec653aea336"),
                            MoTa = "Cỡ giày 47",
                            TenKichCo = "Size 47",
                            TrangThai = true,
                            size = 47
                        },
                        new
                        {
                            KichCoId = new Guid("22abfb82-d448-4d99-a449-56f4532f58d9"),
                            MoTa = "Cỡ giày 48",
                            TenKichCo = "Size 48",
                            TrangThai = true,
                            size = 48
                        },
                        new
                        {
                            KichCoId = new Guid("2c8a07d9-ef17-4a0f-b382-e1798d09597b"),
                            MoTa = "Cỡ giày 49",
                            TenKichCo = "Size 49",
                            TrangThai = true,
                            size = 49
                        },
                        new
                        {
                            KichCoId = new Guid("94ac7df7-9387-403e-a7a3-0aa67dc4b754"),
                            MoTa = "Cỡ giày 50",
                            TenKichCo = "Size 50",
                            TrangThai = true,
                            size = 50
                        });
                });

            modelBuilder.Entity("Data.Models.KieuDang", b =>
                {
                    b.Property<Guid>("KieuDangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKieuDang")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("KieuDangId");

                    b.ToTable("KieuDangs");
                });

            modelBuilder.Entity("Data.Models.MauSac", b =>
                {
                    b.Property<Guid>("MauSacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMau")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MauSacId");

                    b.ToTable("MauSacs");

                    b.HasData(
                        new
                        {
                            MauSacId = new Guid("2f19958e-1f24-4998-8d30-c340db7a1e13"),
                            Color = "#FF0000",
                            MoTa = "Màu đỏ cơ bản",
                            TenMau = "Đỏ",
                            TrangThai = true
                        },
                        new
                        {
                            MauSacId = new Guid("f42c0f8f-b6b0-4c13-b05e-f23fea796675"),
                            Color = "#0000FF",
                            MoTa = "Màu xanh dương cơ bản",
                            TenMau = "Xanh dương",
                            TrangThai = true
                        },
                        new
                        {
                            MauSacId = new Guid("62d73868-938c-4867-ae2c-3fdc22e03214"),
                            Color = "#00FF00",
                            MoTa = "Màu xanh lá cây",
                            TenMau = "Xanh lá",
                            TrangThai = true
                        },
                        new
                        {
                            MauSacId = new Guid("c17dd3f4-bbfc-4945-9c77-9aa4416c4b1f"),
                            Color = "#FFFF00",
                            MoTa = "Màu vàng",
                            TenMau = "Vàng",
                            TrangThai = true
                        },
                        new
                        {
                            MauSacId = new Guid("f5ddb848-0785-45d7-87c6-0375745a16dd"),
                            Color = "#000000",
                            MoTa = "Màu đen",
                            TenMau = "Đen",
                            TrangThai = true
                        },
                        new
                        {
                            MauSacId = new Guid("4955c83b-c94c-4e42-8538-478925a52082"),
                            Color = "#FFFFFF",
                            MoTa = "Màu trắng",
                            TenMau = "Trắng",
                            TrangThai = true
                        });
                });

            modelBuilder.Entity("Data.Models.NhanVien", b =>
                {
                    b.Property<Guid>("NhanVienId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChucVuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("NgayCapNhatCuoiCung")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TaikhoanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("NhanVienId");

                    b.HasIndex("ChucVuId");

                    b.HasIndex("TaikhoanId")
                        .IsUnique()
                        .HasFilter("[TaikhoanId] IS NOT NULL");

                    b.ToTable("NhanViens");

                    b.HasData(
                        new
                        {
                            NhanVienId = new Guid("88888888-8888-8888-8888-888888888888"),
                            ChucVuId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Email = "admin@shop.com",
                            HoTen = "Nguyễn Văn Quản Trị",
                            NgayCapNhatCuoiCung = new DateTime(2025, 9, 17, 15, 58, 48, 439, DateTimeKind.Local).AddTicks(9076),
                            NgaySinh = new DateTime(1995, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoDienThoai = "0987654321",
                            TaikhoanId = new Guid("99999999-9999-9999-9999-999999999999"),
                            TrangThai = true
                        });
                });

            modelBuilder.Entity("Data.Models.TaiKhoan", b =>
                {
                    b.Property<Guid>("TaikhoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Ngaytaotaikhoan")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaikhoanId");

                    b.ToTable("TaiKhoans");

                    b.HasData(
                        new
                        {
                            TaikhoanId = new Guid("99999999-9999-9999-9999-999999999999"),
                            Ngaytaotaikhoan = new DateTime(2025, 9, 17, 15, 58, 48, 439, DateTimeKind.Local).AddTicks(9001),
                            Password = "admin123",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("Data.Models.TheLoaiGiay", b =>
                {
                    b.Property<Guid>("TheLoaiGiayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTheLoai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("TheLoaiGiayId");

                    b.ToTable("TheLoaiGiays");
                });

            modelBuilder.Entity("Data.Models.ThuongHieu", b =>
                {
                    b.Property<Guid>("ThuongHieuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenThuongHieu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("ThuongHieuId");

                    b.ToTable("ThuongHieus");
                });

            modelBuilder.Entity("Data.Models.Voucher", b =>
                {
                    b.Property<Guid>("VoucherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("DieuKienToiThieu")
                        .HasColumnType("real");

                    b.Property<float>("GiamToiDa")
                        .HasColumnType("real");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<float>("PhanTram")
                        .HasColumnType("real");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<float>("SoTienGiam")
                        .HasColumnType("real");

                    b.Property<string>("TenVoucher")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("VoucherId");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("API.Models.GiayYeuThich", b =>
                {
                    b.HasOne("Data.Models.Giay", "Giays")
                        .WithMany("GiayYeuThiches")
                        .HasForeignKey("GiayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.KhachHang", "KhachHangs")
                        .WithMany("GiayYeuThichs")
                        .HasForeignKey("KhachHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Giays");

                    b.Navigation("KhachHangs");
                });

            modelBuilder.Entity("Data.Models.Anh", b =>
                {
                    b.HasOne("Data.Models.GiayChiTiet", "GiayChiTiet")
                        .WithMany("Anhs")
                        .HasForeignKey("GiayChiTietId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiayChiTiet");
                });

            modelBuilder.Entity("Data.Models.DiaChiKhachHang", b =>
                {
                    b.HasOne("Data.Models.KhachHang", "KhachHang")
                        .WithMany("DiaChiKhachHangs")
                        .HasForeignKey("KhachHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("Data.Models.Giay", b =>
                {
                    b.HasOne("Data.Models.ChatLieu", "ChatLieu")
                        .WithMany("Giays")
                        .HasForeignKey("ChatLieuId");

                    b.HasOne("Data.Models.DeGiay", "DeGiay")
                        .WithMany("Giays")
                        .HasForeignKey("DeGiayId");

                    b.HasOne("Data.Models.KieuDang", "KieuDang")
                        .WithMany("Giays")
                        .HasForeignKey("KieuDangId");

                    b.HasOne("Data.Models.TheLoaiGiay", "TheLoaiGiay")
                        .WithMany("Giays")
                        .HasForeignKey("TheLoaiGiayId");

                    b.HasOne("Data.Models.ThuongHieu", "ThuongHieu")
                        .WithMany("Giays")
                        .HasForeignKey("ThuongHieuId");

                    b.Navigation("ChatLieu");

                    b.Navigation("DeGiay");

                    b.Navigation("KieuDang");

                    b.Navigation("TheLoaiGiay");

                    b.Navigation("ThuongHieu");
                });

            modelBuilder.Entity("Data.Models.GiayChiTiet", b =>
                {
                    b.HasOne("Data.Models.Giay", "Giay")
                        .WithMany("GiayChiTiets")
                        .HasForeignKey("GiayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.KichCo", "KichCo")
                        .WithMany("GiayChiTiets")
                        .HasForeignKey("KichCoId");

                    b.HasOne("Data.Models.MauSac", "MauSac")
                        .WithMany("GiayChiTiets")
                        .HasForeignKey("MauSacId");

                    b.Navigation("Giay");

                    b.Navigation("KichCo");

                    b.Navigation("MauSac");
                });

            modelBuilder.Entity("Data.Models.GiayDotGiamGia", b =>
                {
                    b.HasOne("Data.Models.GiamGia", "GiamGia")
                        .WithMany("GiayDotGiamGias")
                        .HasForeignKey("GiamGiaId");

                    b.HasOne("Data.Models.GiayChiTiet", "GiayChiTiet")
                        .WithMany()
                        .HasForeignKey("GiayChiTietId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Data.Models.Giay", null)
                        .WithMany("GiayDotGiamGias")
                        .HasForeignKey("GiayId");

                    b.Navigation("GiamGia");

                    b.Navigation("GiayChiTiet");
                });

            modelBuilder.Entity("Data.Models.GioHang", b =>
                {
                    b.HasOne("Data.Models.KhachHang", "KhachHang")
                        .WithMany("GioHangs")
                        .HasForeignKey("KhachHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("Data.Models.GioHangChiTiet", b =>
                {
                    b.HasOne("Data.Models.Giay", "Giays")
                        .WithMany("GioHangChiTiets")
                        .HasForeignKey("GiayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.GioHang", "GioHang")
                        .WithMany("GioHangChiTiets")
                        .HasForeignKey("GioHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Giays");

                    b.Navigation("GioHang");
                });

            modelBuilder.Entity("Data.Models.HoaDon", b =>
                {
                    b.HasOne("Data.Models.HinhThucThanhToan", "hinhThucThanhToan")
                        .WithMany("HoaDons")
                        .HasForeignKey("HinhThucThanhToanId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Data.Models.KhachHang", "khachHang")
                        .WithMany("HoaDons")
                        .HasForeignKey("KhachHangId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Data.Models.NhanVien", "nhanVien")
                        .WithMany("HoaDons")
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Data.Models.Voucher", "voucher")
                        .WithMany("HoaDons")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("hinhThucThanhToan");

                    b.Navigation("khachHang");

                    b.Navigation("nhanVien");

                    b.Navigation("voucher");
                });

            modelBuilder.Entity("Data.Models.HoaDonChiTiet", b =>
                {
                    b.HasOne("Data.Models.GiayChiTiet", "GiayChiTiet")
                        .WithMany()
                        .HasForeignKey("GiayChiTietId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Giay", null)
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("GiayId");

                    b.HasOne("Data.Models.HoaDon", "HoaDons")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("HoaDonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiayChiTiet");

                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("Data.Models.KhachHang", b =>
                {
                    b.HasOne("Data.Models.TaiKhoan", "TaiKhoan")
                        .WithOne("KhachHang")
                        .HasForeignKey("Data.Models.KhachHang", "TaiKhoanId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("Data.Models.KhachHangVoucher", b =>
                {
                    b.HasOne("Data.Models.KhachHang", "KhachHang")
                        .WithMany("KhachHangVouchers")
                        .HasForeignKey("KhachHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Voucher", "Voucher")
                        .WithMany("KhachHangVouchers")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("Data.Models.NhanVien", b =>
                {
                    b.HasOne("Data.Models.ChucVu", "ChucVu")
                        .WithMany("nhanViens")
                        .HasForeignKey("ChucVuId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Data.Models.TaiKhoan", "TaiKhoan")
                        .WithOne("NhanVien")
                        .HasForeignKey("Data.Models.NhanVien", "TaikhoanId");

                    b.Navigation("ChucVu");

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("Data.Models.ChatLieu", b =>
                {
                    b.Navigation("Giays");
                });

            modelBuilder.Entity("Data.Models.ChucVu", b =>
                {
                    b.Navigation("nhanViens");
                });

            modelBuilder.Entity("Data.Models.DeGiay", b =>
                {
                    b.Navigation("Giays");
                });

            modelBuilder.Entity("Data.Models.GiamGia", b =>
                {
                    b.Navigation("GiayDotGiamGias");
                });

            modelBuilder.Entity("Data.Models.Giay", b =>
                {
                    b.Navigation("GiayChiTiets");

                    b.Navigation("GiayDotGiamGias");

                    b.Navigation("GiayYeuThiches");

                    b.Navigation("GioHangChiTiets");

                    b.Navigation("HoaDonChiTiets");
                });

            modelBuilder.Entity("Data.Models.GiayChiTiet", b =>
                {
                    b.Navigation("Anhs");
                });

            modelBuilder.Entity("Data.Models.GioHang", b =>
                {
                    b.Navigation("GioHangChiTiets");
                });

            modelBuilder.Entity("Data.Models.HinhThucThanhToan", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("Data.Models.HoaDon", b =>
                {
                    b.Navigation("HoaDonChiTiets");
                });

            modelBuilder.Entity("Data.Models.KhachHang", b =>
                {
                    b.Navigation("DiaChiKhachHangs");

                    b.Navigation("GiayYeuThichs");

                    b.Navigation("GioHangs");

                    b.Navigation("HoaDons");

                    b.Navigation("KhachHangVouchers");
                });

            modelBuilder.Entity("Data.Models.KichCo", b =>
                {
                    b.Navigation("GiayChiTiets");
                });

            modelBuilder.Entity("Data.Models.KieuDang", b =>
                {
                    b.Navigation("Giays");
                });

            modelBuilder.Entity("Data.Models.MauSac", b =>
                {
                    b.Navigation("GiayChiTiets");
                });

            modelBuilder.Entity("Data.Models.NhanVien", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("Data.Models.TaiKhoan", b =>
                {
                    b.Navigation("KhachHang");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("Data.Models.TheLoaiGiay", b =>
                {
                    b.Navigation("Giays");
                });

            modelBuilder.Entity("Data.Models.ThuongHieu", b =>
                {
                    b.Navigation("Giays");
                });

            modelBuilder.Entity("Data.Models.Voucher", b =>
                {
                    b.Navigation("HoaDons");

                    b.Navigation("KhachHangVouchers");
                });
#pragma warning restore 612, 618
        }
    }
}
